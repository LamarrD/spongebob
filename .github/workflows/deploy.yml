name: deploy
on:
  push:
    branches:
      - main
permissions:
  contents: read
  id-token: write
jobs:
  # Starter job to determine what changes there are to deploy
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  # Deploy the frontend if there are changes in the frontend folder
  deploy-frontend:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - run: python -m pip install aws-cdk-lib
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: npm ci
        working-directory: frontend
      - name: Deploy frontend infrastructure
        run: npm run deploy:cdk
        working-directory: frontend
      - name: Deploy frontend content
        run: npm run deploy:frontend
        working-directory: frontend

  # Deploy the backend if there are changes in the backend folder
  deploy-backend:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - run: python -m pip install aws-cdk-lib
      - name: Deploy backend infrastructure and content
        run: npx cdk deploy --require-approval never
        working-directory: backend/cdk
